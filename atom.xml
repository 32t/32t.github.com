<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>32bits</title>
  <subtitle>Smart is new sex</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://32t.github.io/"/>
  <updated>2016-04-09T11:18:44.000Z</updated>
  <id>http://32t.github.io/</id>
  
  <author>
    <name>Simon</name>
    <email>zhaoxiaomeng@pku.edu.cn</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nginx+uWSGI+Django 配置</title>
    <link href="http://32t.github.io/2016/04/09/nginx_uwgsi_django/"/>
    <id>http://32t.github.io/2016/04/09/nginx_uwgsi_django/</id>
    <published>2016-04-09T09:50:32.000Z</published>
    <updated>2016-04-09T11:18:44.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;我们在使用 Django 开发的时，测试过程中通常使用 Django 自带的 web 服务器，并设置 Debug=False，这样可以实时修改代码并更新程序。但是在生产环境中通常使用 Nginx+uWSGI+Django 这样的模式。&lt;/p&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;在这种模式中，使用 Nginx 作为最前端 web 服务器，它接收所有请求并统一管理所有请求。然后 Nginx 将所有的非静态请求通过 uWSGI发送给 Django 处理，Django 处理返回结果由 uWSGI 发给 Nginx，并返回给用户。可见，uWSGI的作用就类似一个桥接器。起到桥梁的作用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不使用Nginx，只使用uWSGI+Django也是可以实现WEB服务的。uWSGI也可以直接处理WEB请求&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;uwsgi、uWSGI、WSGI的区别&quot;&gt;&lt;a href=&quot;#uwsgi、uWSGI、WSGI的区别&quot; class=&quot;headerlink&quot; title=&quot;uwsgi、uWSGI、WSGI的区别&quot;&gt;&lt;/a&gt;uwsgi、uWSGI、WSGI的区别&lt;/h1&gt;&lt;h2 id=&quot;WSGI&quot;&gt;&lt;a href=&quot;#WSGI&quot; class=&quot;headerlink&quot; title=&quot;WSGI&quot;&gt;&lt;/a&gt;WSGI&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;WSGI，全称 Web Server Gateway Interface，或者 Python Web Server Gateway Interface ，是为 Python 语言定义的 Web 服务器和 Web 应用程序或框架之间的一种简单而通用的接口。自从 WSGI 被开发出来以后，许多其它语言中也出现了类似接口。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;WSGI 的官方定义是，the Python Web Server Gateway Interface。从名字就可以看出来，这东西是一个Gateway，也就是网关。网关的作用就是在协议之间进行转换。&lt;/p&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;WSGI 是作为 Web 服务器与 Web 应用程序或应用框架之间的一种低级别的接口，以提升可移植 Web 应用开发的共同点。WSGI 是基于现存的 CGI 标准而设计的。&lt;/p&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;&lt;br&gt;很多框架都自带了 WSGI server ，比如 Flask，webpy，Django、CherryPy等等。当然性能都不好，自带的 web server 更多的是测试用途，发布时则使用生产环境的 WSGI server或者是联合 Nginx 做 uwsgi 。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;也就是说，WSGI就像是一座桥梁，一边连着web服务器，另一边连着用户的应用。但是呢，这个桥的功能很弱，有时候还需要别的桥来帮忙才能进行处理。WSGI 的作用如图所示：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://www.nowamagic.net/librarys/images/201309/2013_09_04_01.png&quot; alt=&quot;WSGI 的作用&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;WSGI的作用&quot;&gt;&lt;a href=&quot;#WSGI的作用&quot; class=&quot;headerlink&quot; title=&quot;WSGI的作用&quot;&gt;&lt;/a&gt;WSGI的作用&lt;/h3&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;&lt;br&gt;WSGI有两方：“服务器”或“网关”一方，以及“应用程序”或“应用框架”一方。服务方调用应用方，提供环境信息，以及一个回调函数（提供给应用程序用来将消息头传递给服务器方），并接收Web内容作为返回值。&lt;/p&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;&lt;br&gt;所谓的 WSGI中间件同时实现了API的两方，因此可以在WSGI服务和WSGI应用之间起调解作用：从WSGI服务器的角度来说，中间件扮演应用程序，而从应用程序的角度来说，中间件扮演服务器。“中间件”组件可以执行以下功能：&lt;/p&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;&lt;br&gt;重写环境变量后，根据目标URL，将请求消息路由到不同的应用对象。&lt;br&gt;允许在一个进程中同时运行多个应用程序或应用框架。&lt;br&gt;负载均衡和远程处理，通过在网络上转发请求和响应消息。&lt;br&gt;进行内容后处理，例如应用XSLT样式表。&lt;br&gt;WSGI 的设计确实参考了 Java 的 servlet。&lt;a href=&quot;http://www.python.org/dev/peps/pep-0333/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;python 开发者文档中&lt;/a&gt;有这么一段话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By contrast, although Java has just as many web application frameworks available, Java’s “servlet” API makes it possible for applications written with any Java web application framework to run in any web server that supports the servlet API.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;uWSGI-和-uwsgi&quot;&gt;&lt;a href=&quot;#uWSGI-和-uwsgi&quot; class=&quot;headerlink&quot; title=&quot;uWSGI 和 uwsgi&quot;&gt;&lt;/a&gt;uWSGI 和 uwsgi&lt;/h3&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;uWSGI是一个Web服务器，它实现了WSGI协议、uwsgi、http等协议。Nginx中HttpUwsgiModule的作用是与uWSGI服务器进行交换。&lt;/p&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;要注意 WSGI / uwsgi / uWSGI 这三个概念的区分。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WSGI看过前面小节的同学很清楚了，是一种通信协议。&lt;/li&gt;
&lt;li&gt;uwsgi同WSGI一样是一种通信协议。&lt;/li&gt;
&lt;li&gt;而uWSGI是实现了uwsgi和WSGI两种协议的Web服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;uwsgi协议是一个uWSGI服务器自有的协议，它用于定义传输信息的类型（type of information），每一个uwsgi packet前4byte为传输信息类型描述，它与WSGI相比是两样东西。&lt;/p&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;关于uwsgi协议看这里：The uwsgi protocol。&lt;/p&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;为什么有了uWSGI为什么还需要Nginx？因为Nginx具备优秀的静态内容处理能力，然后将动态内容转发给uWSGI服务器，这样可以达到很好的客户端响应。&lt;/p&gt;
&lt;h2 id=&quot;uWSGI-Django&quot;&gt;&lt;a href=&quot;#uWSGI-Django&quot; class=&quot;headerlink&quot; title=&quot;uWSGI+Django&quot;&gt;&lt;/a&gt;uWSGI+Django&lt;/h2&gt;&lt;p&gt;###安装&lt;/p&gt;
&lt;p&gt;uWSGI 的安装很简单：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install uwsgi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在我们试下将 Django 跑起来。我们先在 virtualenv 创建一个 Django Project：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@nowamagic ~]# cd nowamagic_venv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@nowamagic nowamagic_venv]# source bin/activate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(nowamagic_venv)[root@nowamagic nowamagic_venv]# django-admin.py startproject nowamagic_pj&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;virtualenv 的路径与目录文件如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.nowamagic.net/librarys/images/201309/2013_09_05_01.png&quot; alt=&quot;virtualenv 的路径与目录文件&quot;&gt;&lt;/p&gt;
&lt;p&gt;Django Project 的路径与目录文件如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.nowamagic.net/librarys/images/201309/2013_09_05_02.png&quot; alt=&quot;Django Project 的路径与目录文件&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;测试uwsgi&quot;&gt;&lt;a href=&quot;#测试uwsgi&quot; class=&quot;headerlink&quot; title=&quot;测试uwsgi&quot;&gt;&lt;/a&gt;测试uwsgi&lt;/h3&gt;&lt;p&gt;在你的服务器上写一个test.py：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# test.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def application(env, start_response):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    start_response(&amp;apos;200 OK&amp;apos;, [(&amp;apos;Content-Type&amp;apos;,&amp;apos;text/html&amp;apos;)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我的 test.py 的路径是 /root/nowamagic_venv/nowamagic_pj/test.py，执行以下命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@nowamagic ~]# cd nowamagic_venv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@nowamagic nowamagic_venv]# source bin/activate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(nowamagic_venv)[root@nowamagic nowamagic_venv]# uwsgi --http :8001 --wsgi-file /root/nowamagic_venv/nowamagic_pj/test.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;访问网页 &lt;a href=&quot;http://115.28.0.89:8001/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://115.28.0.89:8001/&lt;/a&gt;，OK，显示 Hello World，说明 uwsgi 安装成功。&lt;/p&gt;
&lt;h3 id=&quot;测试你的-Django-项目&quot;&gt;&lt;a href=&quot;#测试你的-Django-项目&quot; class=&quot;headerlink&quot; title=&quot;测试你的 Django 项目&quot;&gt;&lt;/a&gt;测试你的 Django 项目&lt;/h3&gt;&lt;p&gt;前面我们用 django-admin.py startproject nowamagic_pj 创建了一个项目，现在我们用 Django 自带的 Web 服务器看看我们的项目有没出问题。还是进入我们虚拟环境：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@nowamagic ~]# cd nowamagic_venv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@nowamagic nowamagic_venv]# source bin/activate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(nowamagic_venv)[root@nowamagic nowamagic_venv]# python2.7 /root/nowamagic_venv/nowamagic_pj/manage.py runserver 0.0.0.0:8002&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;OK，启动 Django 自带的服务器了，我们再访问 &lt;a href=&quot;http://115.28.0.89:8002/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://115.28.0.89:8002/&lt;/a&gt;，成功显示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.nowamagic.net/librarys/images/201309/2013_09_05_03.png&quot; alt=&quot;正确显示&quot;&gt;&lt;/p&gt;
&lt;p&gt;说明 Djanggo 项目也没问题。&lt;/p&gt;
&lt;h3 id=&quot;连接Django和uwsgi&quot;&gt;&lt;a href=&quot;#连接Django和uwsgi&quot; class=&quot;headerlink&quot; title=&quot;连接Django和uwsgi&quot;&gt;&lt;/a&gt;连接Django和uwsgi&lt;/h3&gt;&lt;p&gt;最后一步了，我们要把uwsgi与Django连接起来。&lt;/p&gt;
&lt;p&gt;编写django_wsgi.py文件，将其放在与文件manage.py同一个目录下。我的放在 /root/nowamagic_venv/nowamagic_pj/ 下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# coding: utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 将系统的编码设置为UTF8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reload(sys)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sys.setdefaultencoding(&amp;apos;utf8&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.environ.setdefault(&amp;quot;DJANGO_SETTINGS_MODULE&amp;quot;, &amp;quot;nowamagic_pj.settings&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.core.handlers.wsgi import WSGIHandler&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;application = WSGIHandler()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注意不要直接 copy，有个地方要改：注意到语句os.environ.setdefault。比如我的项目为nowamagic_pj，则语句应该是 os.environ.setdefault(“DJANGO_SETTINGS_MODULE”, “nowamagic_pj.settings”)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OK，进入虚拟环境执行指令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@nowamagic ~]# cd nowamagic_venv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@nowamagic nowamagic_venv]# source bin/activate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(nowamagic_venv)[root@nowamagic nowamagic_venv]# uwsgi --http :8000 --chdir /root/nowamagic_venv/nowamagic_pj/ --module django_wsgi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成功显示 Django It Works 页面。&lt;/p&gt;
&lt;p&gt;这样，你就可以在浏览器中访问你的Django程序了。所有的请求都是经过uwsgi传递给Django程序的。&lt;/p&gt;
&lt;p&gt;这里我们介绍了如何把uwsgi与Django连接起来。&lt;/p&gt;
&lt;h2 id=&quot;Nginx-uWSGI-Django&quot;&gt;&lt;a href=&quot;#Nginx-uWSGI-Django&quot; class=&quot;headerlink&quot; title=&quot;Nginx+uWSGI+Django&quot;&gt;&lt;/a&gt;Nginx+uWSGI+Django&lt;/h2&gt;&lt;p&gt;先安装 Nginx，可以直接用 apt-get 安装&lt;/p&gt;
&lt;h3 id=&quot;Nginx-配置&quot;&gt;&lt;a href=&quot;#Nginx-配置&quot; class=&quot;headerlink&quot; title=&quot;Nginx 配置&quot;&gt;&lt;/a&gt;Nginx 配置&lt;/h3&gt;&lt;p&gt;在 nginx.conf 上加入/修改，我的 server 配置如下（一切从简……）：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;listen       80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server_name  115.28.0.89;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#server_name localhost;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;access_log /home/nowamagic/logs/access.log;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;error_log /home/nowamagic/logs/error.log;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#root         /root/nowamagic_venv/nowamagic_pj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uwsgi_pass 127.0.0.1:8077;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #include uwsgi_params;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    include /etc/nginx/uwsgi_params;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #uwsgi_pass 127.0.0.1:8077;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #uwsgi_param UWSGI_SCRIPT index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #uwsgi_param UWSGI_PYHOME $document_root;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #uwsgi_param UWSGI_CHDIR  $document_root;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;access_log off;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意保证配置里写的目录 /home/nowamagic/logs/ 和 /home/nowamagic/logs/ 存在，接下来就没啥问题了，Nginx 配置很简单。&lt;/p&gt;
&lt;h3 id=&quot;uWSGI-配置&quot;&gt;&lt;a href=&quot;#uWSGI-配置&quot; class=&quot;headerlink&quot; title=&quot;uWSGI 配置&quot;&gt;&lt;/a&gt;uWSGI 配置&lt;/h3&gt;&lt;p&gt;前面我们是直接使用命令行来启动 uWSGI，在实际部署环境中，我们常用的是配置文件的方式，而非命令行的方式。&lt;/p&gt;
&lt;p&gt;我的 Django 程序目录：/root/nowamagic_venv/nowamagic_pj/&lt;/p&gt;
&lt;p&gt;这里让 Nginx 采用 8077 端口与 uWSGI 通讯，请确保此端口没有被其它程序采用。&lt;/p&gt;
&lt;p&gt;uWSGI 支持多种配置文件格式，比如 xml，ini，json 等等都可以。&lt;/p&gt;
&lt;h4 id=&quot;xml-配置&quot;&gt;&lt;a href=&quot;#xml-配置&quot; class=&quot;headerlink&quot; title=&quot;xml 配置&quot;&gt;&lt;/a&gt;xml 配置&lt;/h4&gt;&lt;p&gt;请确定你在上一节中的django_wsgi.py文件已经存在了。新建一个XML文件：nowamagic_pj.xml，将它放在 /root/nowamagic_venv/nowamagic_pj 目录下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;uwsgi&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;socket&amp;gt;127.0.0.1:8077&amp;lt;/socket&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;listen&amp;gt;80&amp;lt;/listen&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;master&amp;gt;true&amp;lt;/master&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;pythonpath&amp;gt;/root/nowamagic_venv/nowamagic_pj&amp;lt;/pythonpath&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;processes&amp;gt;1&amp;lt;/processes&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;logdate&amp;gt;true&amp;lt;/logdate&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;daemonize&amp;gt;/var/log/uwsgi.log&amp;lt;/daemonize&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;plugins&amp;gt;python&amp;lt;/plugins&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/uwsgi&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后执行命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;uwsgi -x /root/nowamagic_venv/nowamagic_pj/nowamagic_pj.xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;or&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/local/bin/uwsgi -x /root/nowamagic_venv/nowamagic_pj/nowamagic_pj.xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;加载指定的xml配置文件。当使用命令行参数时，可以使用简化命令“-x”。当然也可以不简写：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;uwsgi --xml /etc/nowamagic.xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;甚至如果在命令行的最后一个参数以“.xml”结尾，那么就隐含将加载该xml文件作为配置。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;uwsgi /etc/nowamagic.xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有时候因各种环境问题，&lt;code&gt;-x --xml&lt;/code&gt; 命令识别不了，可以使用下面的 ini 配置方式：&lt;/p&gt;
&lt;h4 id=&quot;ini-配置&quot;&gt;&lt;a href=&quot;#ini-配置&quot; class=&quot;headerlink&quot; title=&quot;ini 配置&quot;&gt;&lt;/a&gt;ini 配置&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[uwsgi]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vhost = false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plugins = python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;socket = 127.0.0.1:8077&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;master = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enable-threads = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;workers = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wsgi-file = /root/nowamagic_venv/nowamagic_pj/nowamagic_pj/wsgi.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;virtualenv = /root/nowamagic_venv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chdir = /root/nowamagic_venv/nowamagic_pj&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后执行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;uwsgi --ini /root/nowamagic_venv/nowamagic_pj.ini &amp;amp; uwsgi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就启动起来了。如果无意外的话，就能在网上访问你的 Python 项目了。&lt;/p&gt;
&lt;h2 id=&quot;附&quot;&gt;&lt;a href=&quot;#附&quot; class=&quot;headerlink&quot; title=&quot;附&quot;&gt;&lt;/a&gt;附&lt;/h2&gt;&lt;p&gt;一些我在配置时用到的命令，省得你去搜索：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;关闭 uWSGI：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;killall  -9 uwsgi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;killall -s HUP /var/www/uwsgi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;killall -s HUP /usr/local/bin/uwsgi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;列出端口占用情况：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;netstat -lpnt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;我们在使用 Django 开发的时，测试过程中通常使用 Django 自带的 web 服务器，并设置 Debug=False，这样可以实时修改代码并更新程序。但是在生产环境中通常使用 Nginx+uWSGI+Django 这样的模式。&lt;/p&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;在这种模式中，使用 Nginx 作为最前端 web 服务器，它接收所有请求并统一管理所有请求。然后 Nginx 将所有的非静态请求通过 uWSGI发送给 Django 处理，Django 处理返回结果由 uWSGI 发给 Nginx，并返回给用户。可见，uWSGI的作用就类似一个桥接器。起到桥梁的作用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不使用Nginx，只使用uWSGI+Django也是可以实现WEB服务的。uWSGI也可以直接处理WEB请求&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何在 Django 中设置静态文件</title>
    <link href="http://32t.github.io/2016/03/29/how-to-server-django-static-file/"/>
    <id>http://32t.github.io/2016/03/29/how-to-server-django-static-file/</id>
    <published>2016-03-29T04:32:36.000Z</published>
    <updated>2016-04-09T08:57:50.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在使用 Django 建设网站的过程中通常需要提供其他一些静态文件，例如 css,js,img 等，然而众所周知，django 无法像 apache 或者 iis 一样直接放上去就可以用，成为了众多新手的一大门槛，笔者也是被折磨了多次。花了一上午时间深入研究了 Django 相关官方文档，记录下来顺便整理一下。&lt;/p&gt;
&lt;h2 id=&quot;静态文件提供的两种方式&quot;&gt;&lt;a href=&quot;#静态文件提供的两种方式&quot; class=&quot;headerlink&quot; title=&quot;静态文件提供的两种方式&quot;&gt;&lt;/a&gt;静态文件提供的两种方式&lt;/h2&gt;&lt;p&gt;Django 提供了 django.contrib.staticfiles 来帮助用户管理静态文件。&lt;/p&gt;
&lt;h3 id=&quot;APP-内部文件&quot;&gt;&lt;a href=&quot;#APP-内部文件&quot; class=&quot;headerlink&quot; title=&quot;APP 内部文件&quot;&gt;&lt;/a&gt;APP 内部文件&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;确保django.contrib.staticfiles 在 settting 文件的 INSTALLED_APPS中&lt;/li&gt;
&lt;li&gt;在 setting 文件中，定义变量 STATIC_URL&lt;br&gt; STATIC_URL = ‘/static/‘&lt;/li&gt;
&lt;li&gt;在 my_site/my_app/目录下新建文件夹static/my_app/ 然后在其下面存放文件 myexample.jpg文件&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在模板中使用的时候，可以有两种使用方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;硬编码&lt;br&gt;直接硬编码为/static/my_app/myexample.jpg 这样。注意，Django 会查找所有 app 目录下的static/my_app 文件夹，例如你有两个 app，my_app1,my_app2&lt;br&gt;目录结构如下：&lt;br&gt;my_app1&lt;br&gt;-static&lt;br&gt;—my_app&lt;br&gt;—–myexample.jpg&lt;br&gt;my_app2&lt;br&gt;-static&lt;br&gt;—my_app&lt;br&gt;—–myexample.jpg&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那么这样使用的时候，会直接使用第一个目录下的文件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;软编码&lt;br&gt;也可以使用 static 模板标签来根据相对路径生成 url.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;全局文件&quot;&gt;&lt;a href=&quot;#全局文件&quot; class=&quot;headerlink&quot; title=&quot;全局文件&quot;&gt;&lt;/a&gt;全局文件&lt;/h3&gt;&lt;h3 id=&quot;Django查找静态文件的顺序问题&quot;&gt;&lt;a href=&quot;#Django查找静态文件的顺序问题&quot; class=&quot;headerlink&quot; title=&quot;Django查找静态文件的顺序问题&quot;&gt;&lt;/a&gt;Django查找静态文件的顺序问题&lt;/h3&gt;&lt;p&gt;首先会查找各个 app 下面的 STATIC_URL 文件所指定的目录&lt;/p&gt;
&lt;h3 id=&quot;命名空间-namespace-的问题&quot;&gt;&lt;a href=&quot;#命名空间-namespace-的问题&quot; class=&quot;headerlink&quot; title=&quot;命名空间 namespace 的问题&quot;&gt;&lt;/a&gt;命名空间 namespace 的问题&lt;/h3&gt;&lt;h2 id=&quot;测试环境中使用&quot;&gt;&lt;a href=&quot;#测试环境中使用&quot; class=&quot;headerlink&quot; title=&quot;测试环境中使用&quot;&gt;&lt;/a&gt;测试环境中使用&lt;/h2&gt;&lt;h2 id=&quot;生产环境中使用&quot;&gt;&lt;a href=&quot;#生产环境中使用&quot; class=&quot;headerlink&quot; title=&quot;生产环境中使用&quot;&gt;&lt;/a&gt;生产环境中使用&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在使用 Django 建设网站的过程中通常需要提供其他一些静态文件，例如 css,js,img 等，然而众所周知，django 无法像 ap
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>RMBP13涂层脱落换屏记</title>
    <link href="http://32t.github.io/2016/03/17/rmbp13-screen-fix/"/>
    <id>http://32t.github.io/2016/03/17/rmbp13-screen-fix/</id>
    <published>2016-03-17T08:11:21.000Z</published>
    <updated>2016-03-19T16:08:44.000Z</updated>
    
    <content type="html">&lt;p&gt;之前就听说13款的RMBP反光涂层掉落的问题，当时也没太注意，擦屏幕的方法也比较暴力，直到前两天自己也中了招，一擦之下涂层尽落，再擦一下，落得更多，于是开始了漫漫换屏路。在此记录一下，给同样问题的小伙伴参考。&lt;/p&gt;
&lt;h2 id=&quot;预约Genius-Bar&quot;&gt;&lt;a href=&quot;#预约Genius-Bar&quot; class=&quot;headerlink&quot; title=&quot;预约Genius Bar&quot;&gt;&lt;/a&gt;预约Genius Bar&lt;/h2&gt;&lt;p&gt;首先给400-666-8800打了电话，在说明了问题后，对方会询问序列号和购买时间，同时也会问购买凭证是否还在（实际上用不到），由于涂层脱落问题苹果官方是可以免费换屏的，于是让客服帮忙预约了西单大悦城的genius bar，并记录了邮箱、姓名和电话。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;去Genius-Bar维修&quot;&gt;&lt;a href=&quot;#去Genius-Bar维修&quot; class=&quot;headerlink&quot; title=&quot;去Genius Bar维修&quot;&gt;&lt;/a&gt;去Genius Bar维修&lt;/h2&gt;&lt;p&gt;提前签到后就是等待了，维修的MM看了屏幕，然后问有没有备份数据（建议大家最好备份一下），开具了维修单并表示两个小时后可以来取。&lt;/p&gt;
&lt;p&gt;然后意外发生了，闲逛磨蹭期间接到维修部门的电话，工程师表示“我们拆机后发现您的主板没有序列号，我们拒绝维修”，我询问了为什么没有序列号以及应该找谁处理问题的时候，该工程师态度很差的说“根据规定，我们拒绝维修”，于是懵比的回来取机器。&lt;/p&gt;
&lt;p&gt;排队了半天，终于有个小蓝人出来给我解释了一下，表示他们也没有遇到过相关情况，因为机器也没有之前的购买记录，激活也是我第一次激活，他们需要向上级部门请示看能否维修，只能第二天上午看上级回复后解决，不过可能需要提供购买凭证，如果需要的话可以以拍照的形式传给他们。给出了我两个选择，要么拿回机器不维修，要么等第二天，作为一个码农只能舍弃半天的敲代码时间，留下了机器。&lt;/p&gt;
&lt;h2 id=&quot;客服答复&quot;&gt;&lt;a href=&quot;#客服答复&quot; class=&quot;headerlink&quot; title=&quot;客服答复&quot;&gt;&lt;/a&gt;客服答复&lt;/h2&gt;&lt;p&gt;第二天上午十点多先给400官方客服打电话咨询情况，询问一下如果主板序列号不存在应该怎么处理，能否让400协商，400表示硬件问题国内最高的权限就是直营店，如果直营店维修人员处理不了，可以咨询店长。于是转而给大悦城的客服打电话咨询维修进度，相关客服表示正在上报，只能根据上级反馈来决定，不过该客服同时表示这种情况一般没问题，最多需要提供购买凭证也可以解决（同时也吐槽了一把序列号写入程序，说可能相关程序bug了）。挂掉电话后就接到了维修部门的电话表示经过他们检测序列号一致，可以维修（WTF？），下午三点前去取即可。&lt;/p&gt;
&lt;p&gt;##取回机器&lt;br&gt;带上身份证和维修单即可取回。&lt;/p&gt;
&lt;p&gt;第一次写这种类型的文章，有点流水账了，总结一下，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;预约天才吧&lt;/li&gt;
&lt;li&gt;带上机器和身份证去维修（一般两个小时内就可以取，所以直接带上身份证就行了）&lt;/li&gt;
&lt;li&gt;带上身份证和维修单去取机器&lt;/li&gt;
&lt;li&gt;如果有购买凭证的最好带上，以防出现其他问题来回折腾。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/63e8a615jw1f22ls3adpzj20go0m80tq.jpg&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/63e8a615jw1f22lsif7tbj20m70m8dhl.jpg&quot; alt=&quot;image&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/63e8a615jw1f22lsy3t61j20go0m83z8.jpg&quot; alt=&quot;iamge&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前就听说13款的RMBP反光涂层掉落的问题，当时也没太注意，擦屏幕的方法也比较暴力，直到前两天自己也中了招，一擦之下涂层尽落，再擦一下，落得更多，于是开始了漫漫换屏路。在此记录一下，给同样问题的小伙伴参考。&lt;/p&gt;
&lt;h2 id=&quot;预约Genius-Bar&quot;&gt;&lt;a href=&quot;#预约Genius-Bar&quot; class=&quot;headerlink&quot; title=&quot;预约Genius Bar&quot;&gt;&lt;/a&gt;预约Genius Bar&lt;/h2&gt;&lt;p&gt;首先给400-666-8800打了电话，在说明了问题后，对方会询问序列号和购买时间，同时也会问购买凭证是否还在（实际上用不到），由于涂层脱落问题苹果官方是可以免费换屏的，于是让客服帮忙预约了西单大悦城的genius bar，并记录了邮箱、姓名和电话。&lt;/p&gt;
    
    </summary>
    
    
      <category term="RMBP13" scheme="http://32t.github.io/tags/RMBP13/"/>
    
      <category term="涂层脱落" scheme="http://32t.github.io/tags/%E6%B6%82%E5%B1%82%E8%84%B1%E8%90%BD/"/>
    
      <category term="Genius Bar" scheme="http://32t.github.io/tags/Genius-Bar/"/>
    
  </entry>
  
  <entry>
    <title>mongo性能调优</title>
    <link href="http://32t.github.io/2016/03/15/mongo-optimization/"/>
    <id>http://32t.github.io/2016/03/15/mongo-optimization/</id>
    <published>2016-03-15T08:11:20.000Z</published>
    <updated>2016-03-19T16:10:57.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近公司在做海外业务的拓展，我负责了海外数据的抓取、分析和接口工作，随着开发的推进和数据量的增加&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;调优方案&quot;&gt;&lt;a href=&quot;#调优方案&quot; class=&quot;headerlink&quot; title=&quot;调优方案&quot;&gt;&lt;/a&gt;调优方案&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近公司在做海外业务的拓展，我负责了海外数据的抓取、分析和接口工作，随着开发的推进和数据量的增加&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;
    
    </summary>
    
    
      <category term="mongodb" scheme="http://32t.github.io/tags/mongodb/"/>
    
      <category term="性能" scheme="http://32t.github.io/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>Markdown学习记录</title>
    <link href="http://32t.github.io/2016/03/11/markdown-start/"/>
    <id>http://32t.github.io/2016/03/11/markdown-start/</id>
    <published>2016-03-11T11:50:32.000Z</published>
    <updated>2016-03-11T16:32:07.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;We believe that writing is about content, about what you want to say – not about fancy formatting. 我们坚信写作写的是内容，所思所想，而不是花样格式。— Ulysses for Mac&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;写作原因&quot;&gt;&lt;a href=&quot;#写作原因&quot; class=&quot;headerlink&quot; title=&quot;写作原因:&quot;&gt;&lt;/a&gt;写作原因:&lt;/h2&gt;&lt;p&gt;一直在想定期总结一下自己遇到的技术问题和解决方式，顺便记录自己的成长过程。感谢GitHub提供了免费的空间，同时也感谢Hexo的作者，提供了这么好的静态网站制作工具。Hexo文章格式遵循Markdown语法，刚好记录下来，作为第一篇技术学习记录。&lt;/p&gt;
&lt;h2 id=&quot;语法规则&quot;&gt;&lt;a href=&quot;#语法规则&quot; class=&quot;headerlink&quot; title=&quot;语法规则&quot;&gt;&lt;/a&gt;语法规则&lt;/h2&gt;&lt;h3 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h3&gt;&lt;p&gt;# 一级标题&lt;/p&gt;
&lt;p&gt;## 二级标题&lt;/p&gt;
&lt;p&gt;### 三级标题&lt;br&gt;以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h3&gt;&lt;h4 id=&quot;无序列表&quot;&gt;&lt;a href=&quot;#无序列表&quot; class=&quot;headerlink&quot; title=&quot;无序列表&quot;&gt;&lt;/a&gt;无序列表&lt;/h4&gt;&lt;p&gt;书写方式&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* 这

* 是

* 表

* 格
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;这&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;是&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;格&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;有序列表&quot;&gt;&lt;a href=&quot;#有序列表&quot; class=&quot;headerlink&quot; title=&quot;有序列表&quot;&gt;&lt;/a&gt;有序列表&lt;/h4&gt;&lt;p&gt;书写方式&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 这

2. 是

3. 表

4. 格
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;这&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;是&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;格&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h3&gt;&lt;p&gt;在需要引用的文字之前添加&lt;code&gt;&amp;gt;&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/63e8a615jw1f1tdtgd70lj20r60cc0tc.jpg&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;图片与链接&quot;&gt;&lt;a href=&quot;#图片与链接&quot; class=&quot;headerlink&quot; title=&quot;图片与链接&quot;&gt;&lt;/a&gt;图片与链接&lt;/h3&gt;&lt;p&gt;插入链接与插入图片的语法很像，区别在一个 !号&lt;/p&gt;
&lt;p&gt;图片为：&lt;br&gt;    &lt;code&gt;![](){ImgCap}{/ImgCap}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;链接为:&lt;br&gt;    &lt;code&gt;[]()&lt;/code&gt;&lt;br&gt;插入图片的地址需要图床，这里推荐围脖图床修复计划 与 CloudApp 的服务，生成URL地址即可。&lt;/p&gt;
&lt;h3 id=&quot;粗体与斜体&quot;&gt;&lt;a href=&quot;#粗体与斜体&quot; class=&quot;headerlink&quot; title=&quot;粗体与斜体&quot;&gt;&lt;/a&gt;粗体与斜体&lt;/h3&gt;&lt;p&gt;Markdown 的粗体和斜体也非常简单，用两个 &lt;em&gt; 包含一段文本就是粗体的语法，用一个 &lt;/em&gt; 包含一段文本就是斜体的语法。&lt;/p&gt;
&lt;p&gt;例如：&lt;strong&gt;这里是粗体&lt;/strong&gt; &lt;em&gt;这里是斜体&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;表格&quot;&gt;&lt;a href=&quot;#表格&quot; class=&quot;headerlink&quot; title=&quot;表格&quot;&gt;&lt;/a&gt;表格&lt;/h3&gt;&lt;p&gt;表格是我觉得 Markdown 比较累人的地方，例子如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Tables        | Are           | Cool  |
| ------------- |:-------------:| -----:|
| col 3 is      | right-aligned | $1600 |
| col 2 is      | centered      |   $12 |
| zebra stripes | are neat      |    $1 |
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tables&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Are&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Cool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;right-aligned&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;centered&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zebra stripes&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;are neat&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;代码框&quot;&gt;&lt;a href=&quot;#代码框&quot; class=&quot;headerlink&quot; title=&quot;代码框&quot;&gt;&lt;/a&gt;代码框&lt;/h3&gt;&lt;p&gt;单行代码展示，只需要用`框起来即可：&lt;br&gt;代码：&lt;br&gt;    &lt;code&gt;int a = 1+1&lt;/code&gt;&lt;br&gt;效果如下&lt;/p&gt;
&lt;p&gt;&lt;code&gt;int a = 1+1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;多行代码展示，需要在多行代码之前添加tab，效果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def http_get(url):
    success = False
    for i in xrange(3):
        try:
                r = session.get(url, timeout=10)
                if r.status_code == 200:
                        return r.content
        except Exception, e:
             # logger.error(&amp;apos;http get error: %s, url: %s&amp;apos; % (e, url))
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;分割线&quot;&gt;&lt;a href=&quot;#分割线&quot; class=&quot;headerlink&quot; title=&quot;分割线&quot;&gt;&lt;/a&gt;分割线&lt;/h3&gt;&lt;p&gt;分割线的语法只需要三个 * 号。&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;***
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;其他工具&quot;&gt;&lt;a href=&quot;#其他工具&quot; class=&quot;headerlink&quot; title=&quot;其他工具&quot;&gt;&lt;/a&gt;其他工具&lt;/h2&gt;&lt;h3 id=&quot;图床工具&quot;&gt;&lt;a href=&quot;#图床工具&quot; class=&quot;headerlink&quot; title=&quot;图床工具&quot;&gt;&lt;/a&gt;图床工具&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://weibotuchuang.sinaapp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;围脖图床修复计划&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  安装响应插件后，将图片拖拽上传就可以产生url，方便使用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;We believe that writing is about content, about what you want to say – not about fancy formatting. 我们坚信写作写的是内容，所思所想，而不是花样格式。— Ulysses for Mac&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;写作原因&quot;&gt;&lt;a href=&quot;#写作原因&quot; class=&quot;headerlink&quot; title=&quot;写作原因:&quot;&gt;&lt;/a&gt;写作原因:&lt;/h2&gt;&lt;p&gt;一直在想定期总结一下自己遇到的技术问题和解决方式，顺便记录自己的成长过程。感谢GitHub提供了免费的空间，同时也感谢Hexo的作者，提供了这么好的静态网站制作工具。Hexo文章格式遵循Markdown语法，刚好记录下来，作为第一篇技术学习记录。&lt;/p&gt;
&lt;h2 id=&quot;语法规则&quot;&gt;&lt;a href=&quot;#语法规则&quot; class=&quot;headerlink&quot; title=&quot;语法规则&quot;&gt;&lt;/a&gt;语法规则&lt;/h2&gt;&lt;h3 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h3&gt;&lt;p&gt;# 一级标题&lt;/p&gt;
&lt;p&gt;## 二级标题&lt;/p&gt;
&lt;p&gt;### 三级标题&lt;br&gt;以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>密码学的新方向笔记</title>
    <link href="http://32t.github.io/2016/03/11/Hello-world-again/"/>
    <id>http://32t.github.io/2016/03/11/Hello-world-again/</id>
    <published>2016-03-11T06:51:12.000Z</published>
    <updated>2016-03-19T16:07:25.000Z</updated>
    
    <content type="html">&lt;p&gt;密码学的新方向《NEW DIRECTIONS IN CRYPTOGRAPHY》是Deffie 和 Hellman两位大神于1976年所写的论文，&lt;br&gt;论文介绍了&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;密码学的新方向《NEW DIRECTIONS IN CRYPTOGRAPHY》是Deffie 和 Hellman两位大神于1976年所写的论文，&lt;br&gt;论文介绍了&lt;/p&gt;

    
    </summary>
    
    
      <category term="密码学 论文" scheme="http://32t.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6-%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>统计学笔记</title>
    <link href="http://32t.github.io/2016/03/11/ISLR_chap3/"/>
    <id>http://32t.github.io/2016/03/11/ISLR_chap3/</id>
    <published>2016-03-11T06:51:12.000Z</published>
    <updated>2016-03-19T16:09:30.000Z</updated>
    
    <content type="html">&lt;p&gt;标准差可以用来计算置信度。&lt;br&gt;95%的置信度表示有95%的可能性，某个未知的参数会落在某个区间。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标准差&lt;/li&gt;
&lt;li&gt;置信度&amp;amp;置信区间&lt;/li&gt;
&lt;li&gt;假设检验&lt;/li&gt;
&lt;li&gt;t-统计&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;标准差可以用来计算置信度。&lt;br&gt;95%的置信度表示有95%的可能性，某个未知的参数会落在某个区间。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标准差&lt;/li&gt;
&lt;li&gt;置信度&amp;amp;置信区间&lt;/li&gt;
&lt;li&gt;假设检验&lt;/li&gt;
&lt;li&gt;t-统计&lt;/li&gt;
&lt;/ul&gt;

    
    </summary>
    
    
      <category term="统计学" scheme="http://32t.github.io/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6/"/>
    
      <category term="R" scheme="http://32t.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://32t.github.io/2016/03/11/hello-world/"/>
    <id>http://32t.github.io/2016/03/11/hello-world/</id>
    <published>2016-03-11T06:46:17.000Z</published>
    <updated>2016-03-19T16:09:32.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
